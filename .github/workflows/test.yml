name: test process to EC2
on:
  workflow_run:
    workflows: ["CI"]
    types:
      - completed
    branches:
      - main

jobs:
  create-files:
    runs-on: ubuntu-latest
    if: ${{ github.event.workflow_run.conclusion == 'success' }}
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v4
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ${{ secrets.AWS_REGION }}
        
    - name: Create files command to EC2
      run: |
        SHA=${{ github.sha }}
        REPO=${{ github.repository }}
        REPO_SAFE="${REPO//\//_}"
        
        echo "Sending command to instance: ${{ secrets.EC2_INSTANCE_ID }}"
        
        # Send command and capture the command ID
        COMMAND_ID=$(aws ssm send-command \
          --instance-ids ${{ secrets.EC2_INSTANCE_ID }} \
          --document-name "AWS-RunShellScript" \
          --comment "Creating test files on EC2" \
          --parameters "commands=[
              \"echo '=== Starting execution ==='\",
              \"touch test-${SHA}-${REPO_SAFE}.txt\",
              \"echo 'Created: test-${SHA}-${REPO_SAFE}.txt'\",
              \"ls -la ~/test-*.txt\",
              \"echo '=== FINISHED ==='\",
              \"pwd\",
              \"whoami\"
          ]" \
          --query 'Command.CommandId' \
          --output text)
        
        echo "Command ID: $COMMAND_ID"
        
        # Wait for completion (timeout after 60 seconds)
        echo "Waiting for command to complete..."
        aws ssm wait command-executed \
          --command-id "$COMMAND_ID" \
          --instance-id ${{ secrets.EC2_INSTANCE_ID }} \
          --cli-read-timeout 60
        
        # Show the results
        echo "=== COMMAND OUTPUT ==="
        aws ssm get-command-invocation \
          --command-id "$COMMAND_ID" \
          --instance-id ${{ secrets.EC2_INSTANCE_ID }} \
          --query 'StandardOutputContent' \
          --output text
        
        echo "=== COMMAND STATUS ==="
        aws ssm get-command-invocation \
          --command-id "$COMMAND_ID" \
          --instance-id ${{ secrets.EC2_INSTANCE_ID }} \
          --query 'Status' \
          --output text