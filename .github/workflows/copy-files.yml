name: Copy Files to EC2

on:
  workflow_run:
    workflows: ["CI"]
    types:
      - completed
    branches:
      - main

jobs:
  copy-files:
    runs-on: ubuntu-latest
    if: ${{ github.event.workflow_run.conclusion == 'success' }}

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v4
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ${{ secrets.AWS_REGION }}

    - name: Send Git clone command to EC2
      run: |
        echo "Sending command to instance: ${{ secrets.EC2_INSTANCE_ID }}"

        # Send command and capture the command ID
        COMMAND_ID=$(aws ssm send-command \
          --instance-ids ${{ secrets.EC2_INSTANCE_ID }} \
          --document-name "AWS-RunShellScript" \
          --comment "Cloning repo on EC2" \
          --parameters 'commands=[
              "#!/bin/bash",
              "cd /home/ubuntu",
              "echo '=== Setting up OCR1_project directory ==='",
              "if [ -d ~/OCR1_project ]; then echo 'Directory exists, removing old version...'; rm -rf ~/OCR1_project; fi",
              "echo '=== Cloning latest code ==='",
              "git clone https://github.com/${{ github.repository }} ~/OCR1_project",
              "cd ~/OCR1_project",
              "git checkout ${{ github.sha }}",
              "echo '=== Listing files after clone ==='",
              "ls -la ~/OCR1_project",
          ]'
          --query 'Command.CommandId' \
          --output text)
        
        echo "Command ID: $COMMAND_ID"
        
        # Wait for completion (timeout after 60 seconds)
        echo -e "Waiting for command to complete...\n"
        aws ssm wait command-executed \
          --command-id "$COMMAND_ID" \
          --instance-id ${{ secrets.EC2_INSTANCE_ID }} \
          --cli-read-timeout 60
        
        # Show the results
        echo "=== COMMAND OUTPUT ==="
        aws ssm get-command-invocation \
          --command-id "$COMMAND_ID" \
          --instance-id ${{ secrets.EC2_INSTANCE_ID }} \
          --query 'StandardOutputContent' \
          --output text
        
        echo "=== COMMAND STATUS ==="
        aws ssm get-command-invocation \
          --command-id "$COMMAND_ID" \
          --instance-id ${{ secrets.EC2_INSTANCE_ID }} \
          --query 'Status' \
          --output text