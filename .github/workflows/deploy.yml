name: Deploy to EC2

on:
  workflow_run:
    workflows: ["CI"]
    types:
      - completed
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest
    if: ${{ github.event.workflow_run.conclusion == 'success' }}

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v4
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ${{ secrets.AWS_REGION }}

    - name: Deploy using Docker Compose on EC2
      env:
        IMAGE_TAG: ${{ github.sha }}
        DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
        DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}
      run: |
        aws ssm send-command \
          --instance-ids ${{ secrets.EC2_INSTANCE_ID }} \
          --document-name "AWS-RunShellScript" \
          --parameters 'commands=[
            "echo \"=== Starting Deployment ===\"",
            "cd ~/OCR1_project",
            "echo \"=== Stopping Existing Containers ===\"",
            "docker-compose down --remove-orphans",
            "echo \"=== Cleaning Up Docker Resources ===\"",
            "docker system prune -af --volumes",

            "echo \"=== Checking Disk Space ===\"",
            "df -h",

            "echo \"=== Logging into Docker Hub ===\"",
            "echo \"$DOCKER_PASSWORD\" | docker login -u \"$DOCKER_USERNAME\" --password-stdin",
            
            "echo \"=== Pulling Latest Images ===\"",
            "docker pull jjp006/ocr1:$IMAGE_TAG",
            "docker tag jjp006/ocr1:$IMAGE_TAG jjp006/ocr1:latest",
            
            "echo \"=== Starting Containers with Rebuild ===\"",
            "IMAGE_TAG=$IMAGE_TAG docker-compose up -d --build --force-recreate",
            
            "echo \"=== Configuring Nginx ===\"",
            "echo \"server { listen 80; server_name _; location / { proxy_pass http://127.0.0.1:8000; proxy_set_header Host \$host; proxy_set_header X-Real-IP \$remote_addr; proxy_set_header X-Forwarded-For \$proxy_add_x_forwarded_for; proxy_set_header X-Forwarded-Proto \$scheme; } }\" | sudo tee /etc/nginx/sites-available/ocr1",
            "sudo ln -sf /etc/nginx/sites-available/ocr1 /etc/nginx/sites-enabled/",
            "sudo nginx -t && sudo systemctl restart nginx",
            
            "echo \"=== Waiting for Application to Start ===\"",
            "sleep 10",
            
            "echo \"=== Checking Application Health ===\"",
            "curl -f http://localhost:8000 || exit 1",
            
            "echo \"=== Deployment Completed ===\""
          ]'

        